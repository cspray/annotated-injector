<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.24.0@462c80e31c34e58cc4f750c656be3927e80e550e">
  <file src="src/Bootstrap/ComposerJsonScanningThirdPartyInitializerProvider.php">
    <MixedArrayAccess>
      <code><![CDATA[$composerData['extra']]]></code>
      <code><![CDATA[$composerData['extra']['$annotatedContainer']]]></code>
      <code><![CDATA[$composerData['extra']['$annotatedContainer']['initializers']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$composerData]]></code>
      <code><![CDATA[$initializers[]]]></code>
      <code><![CDATA[$packageInitializer]]></code>
      <code><![CDATA[$packageInitializers]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$initializers]]></code>
      <code><![CDATA[list<class-string<ThirdPartyInitializer>>]]></code>
    </MixedReturnTypeCoercion>
    <UndefinedMethod>
      <code><![CDATA[isDot]]></code>
    </UndefinedMethod>
  </file>
  <file src="src/Bootstrap/ServiceWiringListener.php">
    <InvalidReturnStatement>
      <code><![CDATA[$services]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array]]></code>
    </InvalidReturnType>
    <MissingTemplateParam>
      <code><![CDATA[ServiceFromServiceDefinition]]></code>
    </MissingTemplateParam>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$services]]></code>
      <code><![CDATA[ServiceFromServiceDefinition<T>]]></code>
      <code><![CDATA[array]]></code>
      <code><![CDATA[new class($service, $serviceDefinition) implements ServiceFromServiceDefinition {
                    public function __construct(
                        private readonly object $service,
                        private readonly ServiceDefinition $definition
                    ) {
                    }

                    public function service() : object {
                        return $this->service;
                    }

                    public function definition() : ServiceDefinition {
                        return $this->definition;
                    }
                }]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="src/Bootstrap/XmlBootstrappingConfiguration.php">
    <MixedAssignment>
      <code><![CDATA[$scanDirectories[]]]></code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$scanDirectories]]></code>
    </MixedPropertyTypeCoercion>
    <UndefinedPropertyFetch>
      <code><![CDATA[$scanDirectory->textContent]]></code>
    </UndefinedPropertyFetch>
  </file>
  <file src="src/Cli/Command/BuildCommand.php">
    <MixedArrayAccess>
      <code><![CDATA[$composer['extra']['annotatedContainer']['configFile']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$configName]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Cli/Command/CacheClearCommand.php">
    <MixedArgument>
      <code><![CDATA[$configName]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$composer['extra']]]></code>
      <code><![CDATA[$composer['extra']['annotatedContainer']]]></code>
      <code><![CDATA[$composer['extra']['annotatedContainer']['configFile']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$composer]]></code>
      <code><![CDATA[$configName]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Cli/Command/InitCommand.php">
    <InvalidOperand>
      <code><![CDATA[$autoloadDevPsr0]]></code>
      <code><![CDATA[$autoloadDevPsr4]]></code>
      <code><![CDATA[$autoloadPsr0]]></code>
      <code><![CDATA[$autoloadPsr4]]></code>
    </InvalidOperand>
    <MixedArgument>
      <code><![CDATA[$composer]]></code>
      <code><![CDATA[$configName]]></code>
      <code><![CDATA[$parameterStore]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$composer['extra']]]></code>
      <code><![CDATA[$composer['extra']['annotatedContainer']]]></code>
      <code><![CDATA[$composer['extra']['annotatedContainer']['configFile']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$autoloadDevPsr0]]></code>
      <code><![CDATA[$autoloadDevPsr4]]></code>
      <code><![CDATA[$autoloadPsr0]]></code>
      <code><![CDATA[$autoloadPsr4]]></code>
      <code><![CDATA[$composer]]></code>
      <code><![CDATA[$composerDevDir]]></code>
      <code><![CDATA[$composerDir]]></code>
      <code><![CDATA[$configName]]></code>
      <code><![CDATA[$parameterStore]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Cli/Command/ValidateCommand.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$configOption]]></code>
      <code><![CDATA[$configOption]]></code>
      <code><![CDATA[$inputProfiles]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Cli/InputParser.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$arguments]]></code>
      <code><![CDATA[$options]]></code>
    </ArgumentTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[assert(is_array($options))]]></code>
      <code><![CDATA[is_array($options)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Cli/TerminalOutput.php">
    <MixedArgument>
      <code><![CDATA[$this->tagCodes['codes']]]></code>
      <code><![CDATA[$this->tagCodes['tags']]]></code>
    </MixedArgument>
  </file>
  <file src="src/ContainerFactory/AbstractContainerFactory.php">
    <MixedArgument>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
  </file>
  <file src="src/ContainerFactory/AurynContainerFactory.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$id]]></code>
      <code><![CDATA[$id]]></code>
      <code><![CDATA[$method]]></code>
    </ArgumentTypeCoercion>
    <MixedArgument>
      <code><![CDATA[$definitions]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$definitions]]></code>
      <code><![CDATA[$params[$name]]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[object]]></code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code><![CDATA[getName]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->state->injector->make(
                    $classType,
                    $this->convertAutowireableParameterSet($parameters)
                )]]></code>
    </MixedReturnStatement>
    <PossiblyNullArgument>
      <code><![CDATA[$method]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/ContainerFactory/AurynContainerFactoryState.php">
    <MissingClosureReturnType>
      <code><![CDATA[static fn() => $value->listOf->toCollection($values)]]></code>
    </MissingClosureReturnType>
    <MixedAssignment>
      <code><![CDATA[$values[]]]></code>
    </MixedAssignment>
  </file>
  <file src="src/ContainerFactory/ContainerFactoryOptionsBuilder.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$activeProfiles]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/ContainerFactory/HasServicePrepareState.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$this->servicePrepares]]></code>
      <code><![CDATA[$this->servicePrepares]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/ContainerFactory/IlluminateContainerFactory.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$method]]></code>
    </ArgumentTypeCoercion>
    <MissingClosureParamType>
      <code><![CDATA[$created]]></code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[function() use($state, $container, $value) {]]></code>
      <code><![CDATA[static fn(Container $container) => $container->call([$target, $delegateInfo['delegateMethod']])]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$abstractService]]></code>
      <code><![CDATA[$concrete]]></code>
      <code><![CDATA[$method]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$service]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value->getName()]]></code>
      <code><![CDATA[$value->getName()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$abstract]]></code>
      <code><![CDATA[$service]]></code>
      <code><![CDATA[$service]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$abstractService]]></code>
      <code><![CDATA[$concrete]]></code>
      <code><![CDATA[$method]]></code>
      <code><![CDATA[$methods]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$params[$param]]]></code>
      <code><![CDATA[$params[$parameter->name()]]]></code>
      <code><![CDATA[$params[$parameter->name()]]]></code>
      <code><![CDATA[$service]]></code>
      <code><![CDATA[$target]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$values[]]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[object]]></code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->state->container->make($classType, $params)]]></code>
    </MixedReturnStatement>
    <PossiblyNullArgument>
      <code><![CDATA[$definition->targetIdentifier()->methodName()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/ContainerFactory/IlluminateContainerFactoryState.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$this->abstractServices]]></code>
      <code><![CDATA[$this->aliases]]></code>
      <code><![CDATA[$this->concreteServices]]></code>
      <code><![CDATA[$this->delegates]]></code>
      <code><![CDATA[$this->namedServices]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/ContainerFactory/ListOfAsArray.php">
    <MoreSpecificImplementedParamType>
      <code><![CDATA[$servicesOfType]]></code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/ContainerFactory/PhpDiContainerFactory.php">
    <MissingClosureReturnType>
      <code><![CDATA[static fn(Container $container) => $container->call(]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$method]]></code>
      <code><![CDATA[$parameter->value()->getName()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$method]]></code>
      <code><![CDATA[$methods]]></code>
      <code><![CDATA[$params[$parameter->name()]]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[object]]></code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code><![CDATA[constructorParameter]]></code>
      <code><![CDATA[getName]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->container->make(
                    $classType,
                    $this->convertAutowireableParameterSet($parameters)
                )]]></code>
    </MixedReturnStatement>
    <PossiblyNullArgument>
      <code><![CDATA[$definition->targetIdentifier()->methodName()]]></code>
      <code><![CDATA[$state->serviceKey($aliasDefinition->abstractService()->getName())]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/ContainerFactory/PhpDiContainerFactoryState.php">
    <MissingClosureReturnType>
      <code><![CDATA[function(Container $container) use ($values, $value) {]]></code>
    </MissingClosureReturnType>
    <MixedAssignment>
      <code><![CDATA[$resolvedValues[]]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[?string]]></code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->serviceKeys[$serviceType] ?? null]]></code>
      <code><![CDATA[$this->serviceKeys[$serviceType] ?? null]]></code>
    </MixedReturnStatement>
  </file>
  <file src="src/Definition/AliasDefinitionBuilder.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$abstractType]]></code>
      <code><![CDATA[$concreteType]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Definition/InjectDefinitionBuilder.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->method]]></code>
      <code><![CDATA[$this->paramName]]></code>
      <code><![CDATA[$this->property]]></code>
    </ArgumentTypeCoercion>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->store]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[?string]]></code>
    </MoreSpecificReturnType>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$service]]></code>
      <code><![CDATA[$type]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Definition/ProfilesAwareContainerDefinition.php">
    <InvalidArgument>
      <code><![CDATA[$definition->profiles()]]></code>
    </InvalidArgument>
  </file>
  <file src="src/Definition/ServiceDefinitionBuilder.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$isAbstract]]></code>
      <code><![CDATA[$type]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Definition/ServiceDelegateDefinitionBuilder.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->delegateMethod]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[string]]></code>
    </MoreSpecificReturnType>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$delegateMethod]]></code>
      <code><![CDATA[$delegateType]]></code>
      <code><![CDATA[$service]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Definition/ServicePrepareDefinitionBuilder.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$method]]></code>
      <code><![CDATA[$service]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Function/definitions.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$name]]></code>
    </ArgumentTypeCoercion>
    <MixedArgument>
      <code><![CDATA[$profiles]]></code>
      <code><![CDATA[$profiles]]></code>
    </MixedArgument>
  </file>
  <file src="src/Internal/SerializerInjectValueParser.php">
    <InvalidScalarArgument>
      <code><![CDATA[$types]]></code>
    </InvalidScalarArgument>
  </file>
  <file src="src/Serializer/ContainerDefinitionSerializer.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$name]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$serviceProfiles]]></code>
    </InvalidArgument>
    <InvalidScalarArgument>
      <code><![CDATA[$injectProfiles]]></code>
    </InvalidScalarArgument>
    <MixedArgument>
      <code><![CDATA[unserialize(base64_decode($attr))]]></code>
      <code><![CDATA[unserialize(base64_decode($attr))]]></code>
      <code><![CDATA[unserialize(base64_decode($attr))]]></code>
      <code><![CDATA[unserialize(base64_decode($attr))]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$isPrimary]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <PossiblyNullArgument>
      <code><![CDATA[$injectProfiles]]></code>
    </PossiblyNullArgument>
    <UndefinedPropertyFetch>
      <code><![CDATA[$xpath->query('@isPrimary', $serviceDefinition)[0]?->value]]></code>
      <code><![CDATA[$xpath->query('@isPrimary', $serviceDefinition)[0]?->value]]></code>
    </UndefinedPropertyFetch>
  </file>
  <file src="src/StaticAnalysis/AnnotatedTargetDefinitionConverter.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$types]]></code>
      <code><![CDATA[$types]]></code>
      <code><![CDATA[$types]]></code>
    </ArgumentTypeCoercion>
  </file>
</files>
